{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","Cardlist","_ref","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","src_ErrorBoundary","components_Cardlist","Spinner","animation","role","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.0b43d0b7.chunk.js","sourcesContent":["import React from 'react';\r\n \r\n\r\nconst Card = (props) => {\r\n\t// option to destructure:\r\n\t// const {name, email, id} = props;\r\n\t// then pass in props without having to prepend with .props\r\n\t// OR simply pass in prop names as params ie. ({name,email,id}) => ....\r\n\treturn (\r\n\t\t<div className=\"test glow tc dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img className=\"pb3\" alt='robot' src={`https://robohash.org/${props.id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2> {props.name} </h2>\r\n\t\t\t\t<p> {props.email} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\t\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n\treturn (\r\n\t    <div>\r\n\t      {\r\n\t      \trobots.map((user,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={robots[i].id} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t      }\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default Cardlist;\r\n\r\n// for .. in robots..\r\n// return Card {} {}","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName=''\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n \r\n// Scroll is a parent component, but isn't its own thing. \r\n// weird jsx syntax coming up...\r\n\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border:'none', height:'1000px'}}> \r\n\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <p> Something went wrong. </p>\r\n\t\t}\r\n\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","import React, {Component} from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox'\r\nimport '../App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundary from '../ErrorBoundary'\r\n\r\n// Note: commented out code reflects 'robots' being a fixed array. \r\n// modified such that we're making an API call. \r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [], //robots,\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() { //demonstratinng this function\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users') //fetch from server\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users => {this.setState({robots: users})});\r\n\t}\r\n\r\n// search function\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value});\r\n\t //arrow function so that this refers to the right thing\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t});\r\n\r\n\t\t\r\n\t\treturn !robots.length ? //if true, return spinner ...\r\n\t\t\t<div className=\"w-100 vh-100 flex items-center justify-center\">\r\n\t\t\t<Spinner className=\"loading\" animation=\"border\" role=\"status\">\r\n\t\t\t\t<span className=\"visually-hidden\">Loading...</span>\r\n\t\t\t</Spinner>\r\n\t\t\t</div> :\r\n\t\t\t\t\t\t// if false, return the following:\r\n\t\t\t(\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1'> Robot Friends </h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<Cardlist robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    < App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}